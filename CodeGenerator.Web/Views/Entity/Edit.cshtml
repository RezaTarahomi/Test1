@model EntityViewModel
@using Database.Data.Entities

<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    tr:hover {
        background-color: #f5f5f5;
    }

    .edit-cell {
    }
</style>

<h2>Edit</h2>

<button class="btn btn-outline-primary" onclick="createFile()">CreateFile</button>
<form asp-action="Edit" id="editForm">
    <div class="row form-group">
        <h4>Entity</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input asp-for="Id" hidden="hidden" class="form-control" />

        <div class="form-group col-md-4">
            <label asp-for="Name" class="control-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>

        </div>

        <div class="form-group col-md-4">
            <label asp-for="Domain" class="control-label"></label>
            <select asp-for="Domain" class="form-select mt-0" asp-items="@Html.GetEnumSelectList<Domains>()" aria-label="Default select example">
                <option selected="">انتخاب کنید...</option>
            </select>
            <span asp-validation-for="Domain" class="text-danger"></span>
        </div>
    </div>
    <div class="row form-group mt-3">
        <div class="col-md-4 form-group">
            <label asp-for="ParentId" class="control-label"></label>
            <select asp-for="ParentId" class="form-select" asp-items="@(new SelectList(ViewBag.Parents,"Id","Caption"))">
                <option selected="">انتخاب کنید...</option>
            </select>
        </div>        
               

        <div class="col-md-2">
            <div class="mt-3">
                <button type="button" class="addParent btn  btn-success mx-2 mt-3"> + </button>
            </div>
        </div>

    </div>


    <div class="form-group">

        <div class="form-group">
            <label asp-for="Path" class="control-label col-md-2 "></label>
            <input asp-for="Path" class="form-control" />
            <span asp-validation-for="Path" class="text-danger"></span>

        </div>


        <div class="dropdown-menu">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <a class="dropdown-item" href="#">Something else here</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Separated link</a>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">Fields</label>

            <div class=" row form-group">

                <div class="container">
                    <div class="row">
                        <div class="col-md-12">

                            <div class="input-group">
                                <input type="text" id="search-box" class="form-control" placeholder="Search For Fields">
                            </div>

                            <div id="suggestions-list"> </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class=" row form-group">

                <div class="col-md-3">
                    <label class="form-label">Name</label>
                    <div>
                        <input type='text' id="fieldName" class="form-control" />
                    </div>
                </div>

                <div class="col-md-3">
                    <label class="form-label">Type</label>
                    <div>
                        <input type='text' id="fieldType" class="form-control" />
                    </div>
                </div>
                <div class="col-md-3">
                    <label class="form-label">Description</label>
                    <div>
                        <input type='text' id="fieldDesc" class="form-control" />
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="mt-3">
                        <button type="button" class="addField btn  btn-success mx-2 mt-3"> + </button>
                        <button type="button" class="deleteButton btn  btn-danger mt-3">DeleteField</button>
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <table id="data-table" class="table entityTable">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Description</th>
                            <th>IsEnum</th>                            
                            <th>IsParent</th>                            
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var entity in Model.Fields)
                        {

                            <tr class="fieldtr">
                                <td class="fieldCheckbox" enumid="@(entity.IsEnum?entity.EnumType.Id:0)" id="@entity.Id"> <input type="checkbox" /> </td>
                                <td>@entity.Name</td>
                                <td>@entity.Type</td>
                                <td> @entity.Description</td>
                                <td>
                                    @if (entity.IsEnum)
                                    {
                                        <input class="isEnum" type="checkbox" name="isEnum" checked="checked" disabled="disabled" />
                                    }
                                    else
                                    {
                                        <input class="isEnum" type="checkbox" disabled="disabled" name="isEnum" />
                                    }
                                </td>
                                <td>
                                    @if (entity.IsParent)
                                    {
                                        <input class="isParent" type="checkbox" name="isParent" checked="checked" disabled="disabled" />
                                    }
                                    
                                </td>

                                <td>

                                    <button type="button" class="editButton btn btn-sm btn-outline-warning">EditRow</button>
                                    <button type="button" class="saveButton btn btn-sm btn-outline-success" style="display:none;">Save</button>
                                    @if (entity.IsEnum)
                                    {
                                        <button type="button" class="showEnum btn btn-sm btn-outline-info">EnumDetail</button>
                                    }

                                </td>


                            </tr>

                            @if (entity.IsEnum)
                            {
                                <tr class="addToEnumTable" style="display:none">
                                    <td style="padding-left:40px" colspan="5">
                                        <div class=" row form-group">

                                            <div class="col-md-3">
                                                <label class="form-label">Name</label>
                                                <div>
                                                    <input type='text' class="fieldEnumName form-control" enumId="@entity.EnumType.Id" />
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <label class="form-label">Value</label>
                                                <div>
                                                    <input type='text' class="fieldEnumValue form-control" />
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <label class="form-label">Description</label>
                                                <div>
                                                    <input type='text' class="fieldEnumDesc form-control" />
                                                </div>
                                            </div>

                                            <div class="col-md-3">
                                                <div class="mt-3">
                                                    <button type="button" class="addEnumField btn btn-success mt-3 mx-2"> + </button>
                                                    <button type="button" class="deleteEnum btn  btn-outline-danger mt-3">DeleteEnum</button>
                                                </div>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="addToEnumTable" style="display:none">
                                    <td style="padding-left:40px" colspan="5">
                                        <table class="enumTable table" style="background-color:#f4f4f4">
                                            @if (entity.EnumType != null && entity.EnumType.EnumFields != null && entity.EnumType.EnumFields.Any())
                                            {
                                                @foreach (var item in entity.EnumType.EnumFields)
                                                {
                                                    <tr class="enumtabletr">
                                                        <td class="enumCheckbox" enumid="@(entity.IsEnum?entity.EnumType.Id:0)" id="@item.Id"><input type="checkbox" /></td>
                                                        <td>@item.Name</td>
                                                        <td>@item.Value</td>
                                                        <td>@item.Description</td>
                                                        <td width="30%">

                                                            <button type="button" class="editEnum btn btn-sm btn-outline-warning">EditRow</button>
                                                            <button type="button" class="saveEnum btn btn-sm btn-outline-success" style="display:none;">Save</button>


                                                        </td>
                                                    </tr>
                                                }
                                            }

                                        </table>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-success mx-2" />
            </div>
        </div>
    </div>
</form>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    function createFile() {
        $.ajax({
            url: '/Entity/CreateClassFile',
            method: 'POST',
            data: {
                id: '@Model.Id'
            },
            success: function () {

            }
            ,
            error: function (xhr, status, error) {
                console.log(error);
            }
        });

    }
</script>


<script>
    function addRowToTable(name, type, desc) {
        var newRow = $('<tr class="fieldtr">');
        var cell1 = $('<td class="fieldCheckbox" enumid="0" id="0">').html('<input type="checkbox" />');
        var cell2 = $('<td>').text(name);
        var cell3 = $('<td>').text(type);
        var cell4 = $('<td>').text(desc);
        var cell5 = $('<td>').html('<input class="isEnum" type="checkbox" name="isEnum" />');
        var cell6 = $('<td>').text('');
        var operationCol = '<button type="button" class="editButton btn btn-sm btn-outline-warning">EditRow</button> ' +
            '<button type="button" class="saveButton btn btn-sm btn-outline-success" >Save</button> ' +
            '<button type="button" class="deleteButton btn btn-sm btn-outline-danger">Delete</button> '
            ;
        var cell7 = $('<td>').html(operationCol);
        newRow.append(cell1, cell2, cell3, cell4, cell5, cell6, cell7);
        $('.entityTable').append(newRow);

    }
</script>
<script>
    function addRowToEnumTable(name, type, desc, enumTypeId, element) {
        var newRow = $('<tr class="enumtabletr">');
        var cell1 = $('<td class="enumCheckbox" enumid="' + enumTypeId + '" id="0">').html('<input type="checkbox" />');
        var cell2 = $('<td>').text(name);
        var cell3 = $('<td>').text(type);
        var cell4 = $('<td>').text(desc);
        var operationCol = '<button type="button" class="editEnum btn btn-sm btn-outline-warning">EditRow</button> ' +
            '<button type="button" class="saveEnum btn btn-sm btn-outline-success" >Save</button> ' +
            '<button type="button" class="deleteEnum btn btn-sm btn-outline-danger">Delete</button> '
            ;
        var cell5 = $('<td>').html(operationCol);
        newRow.append(cell1, cell2, cell3, cell4, cell5);
        element.closest('tr').next().find('.enumTable').append(newRow);
    }
</script>
<script>
    function deleteByIds(url, ids, rows) {

        $.ajax({
            url: url,
            method: 'POST',
            data: {
                ids: ids
            },
            success: function () {

                for (var i = 0; i < rows.length; i++) {
                    rows[i].hide();

                }

            }
            ,
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    }
</script>



<script>
    $(document).ready(function () {
        $('#search-box').on('keyup', function () {
            let query = $(this).val();

            if (query.length > 0) {
                $.ajax({
                    url: '/Entity/GetProperties',
                    method: 'GET',
                    data: {
                        query: query
                    },
                    success: function (data) {
                        $('#suggestions-list').html('');
                        if (data.length > 0) {
                            for (let i = 0; i < data.length; i++) {
                                $('#suggestions-list').append('<a class="dropdown-item" href="#" fieldName="'
                                    + data[i].name + '" fieldType="'
                                    + data[i].type + '"fieldDesc="'
                                    + data[i].description + '">'
                                    + data[i].name + " - "
                                    + data[i].type + " - "
                                    + data[i].description +
                                    '</a>');
                            }
                        } else {
                            $('#fieldName').val(query);
                        }

                    }
                    ,
                    error: function (xhr, status, error) {
                        console.log(error);
                    }
                });
            } else {
                $('#suggestions-list').html('');
            }
        });

        $("body").on("click", '.showEnum', function () {

            $(this).closest("tr").next().toggle();
            $(this).closest("tr").next().next().toggle();
        });

        $("body").on("click", '.dropdown-item', function () {

            var name = $(this).attr("fieldName");
            var type = $(this).attr("fieldType");
            var desc = $(this).attr("fieldDesc");

            addRowToTable(name, type, desc)
        });

    });
</script>

<script>

    $(document).ready(function () {
        $("body").on("click", '.editButton', function () {
            var row = $(this).closest("tr");

            var name = row.find("td:eq(1)").text();
            var type = row.find("td:eq(2)").text();
            var desc = row.find("td:eq(3)").text();


            row.find("td:eq(1)").html("<input type='text' class='form-control edit-cell' value='" + name + "'>");
            row.find("td:eq(2)").html("<input type='text' class='form-control edit-cell' value='" + type + "'>");
            row.find("td:eq(3)").html("<input type='text' class='form-control edit-cell' value='" + desc + "'>");
            row.find("td:eq(4)").find('input').prop('disabled', $(this).prop('disabled'))

            $(this).hide();
            row.find(".saveButton").show();

        });

        $("body").on("click", '.deleteButton', function () {
            var rows = [];
            //find selected field Ids
            var ids = [];
            $(".fieldCheckbox").each(function () {

                if ($(this).find('input').is(':checked')) {

                var id = $(this).prop("id");

                    if (id > 0)
                    {
                        ids.push(id);
                        rows.push($(this).closest('tr'))
                    }
                }
            });
            console.log(rows);
            //call method to delete
            deleteByIds('/Entity/DeleteFields',ids,rows);
        });



        $("body").on("click", '.saveButton', function () {
            var row = $(this).closest("tr");

            var id = row.find("td:eq(0)").prop("id");
            var enumId = row.find("td:eq(0)").attr("enumid");

            var name = row.find("td:eq(1) input").val();
            var type = row.find("td:eq(2) input").val();
            var desc = row.find("td:eq(3) input").val();
            var isEnum = row.find("td:eq(4)").find('input').is(':checked');

            row.find("td:eq(1)").text(name);
            row.find("td:eq(2)").text(type);
            row.find("td:eq(3)").text(desc);
            row.find("td:eq(4)").find('input').prop('disabled', !$(this).prop('disabled'))

            var field = {
                id : id,
                entityId : '@Model.Id',
                enumTypeId : enumId,
                name : name,
                type : type,
                description: desc,
                isEnum:isEnum
            };

            //upsert Field
            upsertField(field, $(this))
        });

        function upsertField(field, element) {

            $.ajax({
                url: '/Entity/UpsertField',
                method: 'POST',
                data: {
                    model: field
                },
                success: function (data) {

                    element.hide();
                    element.closest("tr").find(".editButton").show();
                }
                ,
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }
        $(".addParent").on("click", function () {

            var foreignKey = $("#ParentId option:selected").text()+"Id";
            var parentType = $("#ParentId option:selected").text();
            var type = 'int';
            

            addParentRowsToTable(foreignKey, type)
            addParentRowsToTable(parentType, parentType)
        });

        function addParentRowsToTable(foreignKey, type) {
            var newRow = $('<tr class="parent">');
            var cell1 = $('<td class="fieldCheckbox" enumid="0" id="0">').html('<input type="checkbox" />');
            var cell2 = $('<td>').text(foreignKey);
            var cell3 = $('<td>').text(type);
            var cell4 = $('<td>').text('');
            var cell5 = $('<td>').html('');
            var cell6 = $('<td>').html('<input class="isParent" type="checkbox" checked="checked" name="isParent" disabled="disabled" />');
            var operationCol = '<button type="button" class="editParentButton btn btn-sm btn-outline-warning">EditRow</button> ' +
                '<button type="button" class="saveParentButton btn btn-sm btn-outline-success" >Save</button> ' +
                '<button type="button" class="deleteButton btn btn-sm btn-outline-danger">Delete</button> '
                ;
            var cell7 = $('<td>').html(operationCol);
            newRow.append(cell1, cell2, cell3, cell4, cell5, cell6, cell7);
            $('.entityTable').append(newRow);
        }

        $("body").on("click", '.editParentButton', function () {
            var row = $(this).closest("tr");

            var foreignKey = row.find("td:eq(1)").text();
            var type = row.find("td:eq(2)").text();           

            row.find("td:eq(1)").html("<input type='text' class='form-control edit-cell' value='" + foreignKey + "'>");
            row.find("td:eq(2)").html("<input readonly='readonly' type='text' class='form-control edit-cell' value='" + type + "'>");
            row.find("td:eq(3)").html("<input readonly='readonly' type='text' class='form-control edit-cell' value='" + '' + "'>");            

            $(this).hide();
            row.find(".saveButton").show();

        });

        $(".addField").on("click", function () {

            var name = $("#fieldName").val();
            var type = $("#fieldType").val();
            var desc = $("#fieldDesc").val();

            addRowToTable(name, type, desc)
        });

        $("#editForm").submit(function (e) {
            e.preventDefault();

            var entity = {
                id: $("#Id").val(),
                name: $("#Name").val(),
                path: $("#Path").val(),
                domain: $("#Domain").val(),
                parentId: $("#ParentId").val(),
                isOneToOne: $("#IsOneToOne").is(':checked')
            };
            // Perform an AJAX request to submit the form data
            $.ajax({
                url: "/Entity/Edit", // Replace with your controller and action method
                type: "POST",
                data: entity,
                success: function (response) {
                    // Handle the success response
                },
                error: function (xhr, status, error) {
                    // Handle the error response
                }
            });
        });
    });
</script>

<script>

    $(document).ready(function () {
        $("body").on("click", '.editEnum', function () {
            var row = $(this).closest("tr");

            var name = row.find("td:eq(1)").text();
            var type = row.find("td:eq(2)").text();
            var desc = row.find("td:eq(3)").text();


            row.find("td:eq(1)").html("<input type='text' class='form-control' value='" + name + "'>");
            row.find("td:eq(2)").html("<input type='text' class='form-control' value='" + type + "'>");
            row.find("td:eq(3)").html("<input type='text' class='form-control' value='" + desc + "'>");

            $(this).hide();
            row.find(".saveEnum").show();
        });

        $("body").on("click", '.deleteEnum', function () {
            var rows = [];
            //find selected field Ids
            var ids = [];
            $(".enumCheckbox").each(function () {

                if ($(this).find('input').is(':checked')) {

                    var id = $(this).prop("id");

                    if (id > 0) {
                        ids.push(id);
                        rows.push($(this).closest('tr'))
                    }
                }
            });

            //call method to delete
            deleteByIds('/Entity/DeleteEnumFields', ids, rows);
        });

        $("body").on("click", '.saveEnum', function () {
            var row = $(this).closest("tr");

            var id = row.find("td:eq(0)").prop("id");
            var enumId = row.find("td:eq(0)").attr("enumid");

            var name = row.find("td:eq(1) input").val();
            var value = row.find("td:eq(2) input").val();
            var desc = row.find("td:eq(3) input").val();


            row.find("td:eq(1)").text(name);
            row.find("td:eq(2)").text(value);
            row.find("td:eq(3)").text(desc);

            var enumField = {
                id: id,
                enumTypeId: enumId,
                name: name,
                value: value,
                description: desc,
            };


            upsertEnum(enumField, $(this))


        });

        function upsertEnum(enumField, element) {
            $.ajax({
                url: '/Entity/UpsertEnum',
                method: 'POST',
                data: {
                    model: enumField
                },
                success: function (data) {

                    element.hide();
                    element.closest("tr").find(".editEnum").show();
                }
                ,
                error: function (xhr, status, error) {
                    console.log(error);
                }
            });
        }

        $(".addEnumField").on("click", function () {

            var name = $(this).closest("td").find(".fieldEnumName").val();
            var enumTypeId = $(this).closest("td").find(".fieldEnumName").attr("enumId");
            var value = $(this).closest("td").find(".fieldEnumValue").val();
            var desc = $(this).closest("td").find(".fieldEnumDesc").val();

            addRowToEnumTable(name, value, desc, enumTypeId, $(this))

        });


    });
</script>